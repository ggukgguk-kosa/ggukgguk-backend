<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ggukgguk.api.Admin">
 	<!-- 공지사항  관련 mapper-->
 	
	<select id="noticeSelect" parameterType="int" resultType="int">
		SELECT
		notice_id, notice_title, notice_content, notice_created_at,
		notice_is_emergency
		FROM notice
		WHERE notice_id = #{noticeId}
	</select>

	<insert id="noticeInsert" parameterType="Notice">
		INSERT INTO notice
		(notice_title, notice_content)
		VALUES
		(#{noticeTitle}, #{noticeContent})
	</insert>

	<update id="noticeUpdate" parameterType="int">
		UPDATE notice
		SET notice_title= #{noticeTitle},
		notice_content = #{noticeContent}
		WHERE notice_id =#{noticeId}
	</update>

	<delete id="noticeDelete">
		DELETE FROM notice
		WHERE notice_id = #{noticeId}
	</delete>

	<select id="noticeSelectList" resultType="Notice">
		SELECT notice_id,
		notice_title, notice_content, notice_created_at
		FROM notice
		ORDER BY
		notice_created_at DESC
	</select>

	<select id="noticeSelectPage" parameterType="PageOption" resultType="Notice">
		SELECT
		notice_id, notice_title, notice_content, notice_created_at
		FROM notice
		ORDER BY notice_created_at DESC
		LIMIT #{skip}, #{size}
	</select>

	<!-- 컨텐츠관리 관련 mapper -->
    <select id="contentSelectList" parameterType="PageOption" resultType="Content">
		SELECT record_id, member_id, record_created_at, record_comment,
		media_file_blocked, media_file_checked
		FROM record r
		LEFT JOIN media_file m
		ON r.media_file_id = m.media_file_id
		ORDER BY record_created_at DESC
		LIMIT #{skip}, #{size};
	</select>
	
	<!-- 회원관리 관련 mapper -->		
  	<select id="memberSelectList" parameterType="PageOption" resultType="Content">
  		SELECT member_id, member_name, member_email, member_phone, member_birth
		FROM member
		
  	</select> 
  		<update id="memberDelete" parameterType="java.lang.String">
		UPDATE member
		SET member_pw = '',
		    member_name = '',
		    member_nickname = '',
		    member_email = NULL,
		    member_phone = '',
		    member_activated = 0
		WHERE member_id = #{memberId};	
		</update>
		
  	<select id="selectRecentBatchJobExecution" parameterType="String" resultType="BatchJobExecution">
		SELECT JOB_EXECUTION_ID, VERSION, JOB_INSTANCE_ID, CREATE_TIME,
			START_TIME, END_TIME, STATUS, EXIT_CODE,
			EXIT_MESSAGE, LAST_UPDATED, JOB_CONFIGURATION_LOCATION
		FROM BATCH_JOB_EXECUTION
		WHERE JOB_INSTANCE_ID = (
			SELECT JOB_INSTANCE_ID AS jid
			FROM BATCH_JOB_INSTANCE
			WHERE JOB_NAME = #{jobName}
			ORDER BY JOB_INSTANCE_ID DESC LIMIT 1
		);
  	</select>
  	
 	<select id="selectBatchJobExecution" parameterType="BatchPageOption" resultType="BatchJobExecution">
		SELECT bji.JOB_NAME, bje.JOB_EXECUTION_ID, bje.VERSION, bje.JOB_INSTANCE_ID, bje.CREATE_TIME,
			bje.START_TIME, bje.END_TIME, bje.STATUS, bje.EXIT_CODE,
			bje.EXIT_MESSAGE, bje.LAST_UPDATED, bje.JOB_CONFIGURATION_LOCATION
		FROM BATCH_JOB_EXECUTION bje
		LEFT JOIN BATCH_JOB_INSTANCE bji 
		ON bje.JOB_EXECUTION_ID = bji.JOB_INSTANCE_ID
		WHERE bji.JOB_NAME = #{jobName}
		ORDER BY bje.JOB_EXECUTION_ID DESC
		LIMIT #{skip}, #{size};
  	</select>
  	
	 <select id="selectBatchJobExecutionCount" parameterType="BatchPageOption" resultType="int">
		SELECT COUNT(*)
		FROM BATCH_JOB_EXECUTION bje
		LEFT JOIN BATCH_JOB_INSTANCE bji 
		ON bje.JOB_EXECUTION_ID = bji.JOB_INSTANCE_ID
		WHERE bji.JOB_NAME = 'extractKeywordJob';
  	</select>
</mapper>